// Typography
// ---------------------------------------
// Setting root sizes and base styles.
html {
    @include rootsize;
    -webkit-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -ms-text-size-adjust: 100%;
}

img {
    max-width: 100%;
    height: auto;
}

audio,
video {
    width: 100%;
}

// Site-wide base styles.
body {
    @include fontsize(eta);
    font-family: getFontFamily($bodytype);
    font-style: normal;
    font-weight: map-get($bodytype, regular);
    line-height: 2rem;
    color: $text-color;
    background: $body-background;
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;

    // Only implemented in FF so-far, uses smootscroll polyfill for other browsers.
    // @see: https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior
    scroll-behavior: smooth;
}

// Links.
a {
    color: $anchor-color;
    text-decoration: none;

    &:not(&.nohover) {
        transition: #{$anchor-hover-transition};

        &:hover,
        &:active,
        &:focus {
            color: $anchor-hover-color;
        }
    }
}

// Text selection
::selection {
    background: $selection-color;
    color: map-get($palette, white);
    text-shadow: none;
}

// Styles for typeset text.
.typeset {
    // Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
    p {
        @include baseline(
            $fontsize: zeta,
            $font: $bodytype,
            $lineheight: 2,
            $below: 1
        );
        font-feature-settings: "kern", "onum", "liga";

        &.alpha {
            @include baseline(
                $fontsize: alpha,
                $font: $bodytype,
                $lineheight: 4,
                $below: 1
            );
        }

        &.beta {
            @include baseline(
                $fontsize: beta,
                $font: $bodytype,
                $lineheight: 4,
                $below: 1
            );
        }

        &.gamma {
            @include baseline(
                $fontsize: gamma,
                $font: $bodytype,
                $lineheight: 2,
                $below: 1
            );
        }

        &.delta {
            @include baseline(
                $fontsize: delta,
                $font: $bodytype,
                $lineheight: 2,
                $below: 1
            );
        }
    }

    p + .figure {
        padding-top: 2rem;
    }

    // Headings. OpenType ligatures, discretionary ligatures and lining figures enabled if available.
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-feature-settings: "dlig", "liga", "lnum", "kern";
        font-style: normal;
        font-weight: map-get($headingtype, bold);
    }

    // Heading level 1.
    h1,
    .alpha {
        @include baseline($fontsize: gamma, $font: $headingtype, $lineheight: 3);

        &.anchor-shift {
            @include baseline($fontsize: gamma, $font: $headingtype, $lineheight: 3, $anchor: true);
        }
    }

    // Heading level 2.
    h2,
    .beta {
        @include baseline(delta, $headingtype, $lineheight: 3);

        &.anchor-shift {
            @include baseline(delta, $headingtype, $lineheight: 3, $anchor: true);
        }
    }

    // Heading level 3.
    h3,
    .gamma {
        @include baseline(epsilon, $headingtype, $lineheight: 3);

        &.anchor-shift {
            @include baseline(epsilon, $headingtype, $lineheight: 3, $anchor: true);
        }
    }

    // Heading level 4.
    h4,
    .delta {
        @include baseline(zeta, $headingtype, $lineheight: 2);

        &.anchor-shift {
            @include baseline(zeta, $headingtype, $lineheight: 2, $anchor: true)
        }
    }

    // Heading level 5.
    h5,
    .epsilon {
        @include baseline(eta, $headingtype, $lineheight: 2);

        &.anchor-shift {
            @include baseline(eta, $headingtype, $lineheight: 2, $anchor: true);
        }
    }

    // Heading level 6.
    h6,
    .zeta {
        @include baseline(theta, $headingtype, $lineheight: 2);

        &.anchor-shift {
            @include baseline(theta, $headingtype, $lineheight: 2, $anchor: true);
        }
    }

    // Lists.
    ul,
    ol {
        @include baseline(zeta, $bodytype, $lineheight: 2, $below: 1);

        li {
            font-feature-settings: "kern", "onum", "liga";
            margin-left: 2rem;

            ol,
            ul {
                margin-bottom: 0;
                margin-left: 2rem;
                padding-top: 0;
            }
        }
    }

    // Ordered lists.
    ol {
        list-style-type: none;
        li {
            counter-increment: top-level;
            &:before {
                content: counter(top-level) ".";
                font-feature-settings: "lnum", "tnum";
                margin-left: -3rem;
                position: absolute;
                text-align: right;
                width: 2em;
            }
            ul {
                li {
                    &:before {
                        content: "";
                    }
                    ol {
                        li {
                            counter-increment: alt-level;
                            &:before {
                                content: counter(alt-level) ".";
                            }
                        }
                    }
                }
            }
            ol {
                li {
                    counter-increment: sub-level;
                    &:before {
                        content: counter(top-level) "." counter(sub-level);
                    }
                    ul {
                        li {
                            &:before {
                                content: "";
                            }
                        }
                    }
                    ol {
                        li {
                            counter-increment: sub-sub-level;
                            &:before {
                                content: counter(top-level) "."
                                    counter(sub-level) "."
                                    counter(sub-sub-level);
                            }
                        }
                    }
                }
            }
        }
    }

    // Avoid blank line between p and ul.
    p + ul,
    p + ol {
        margin-top: -1rem;
    }

    // Definition lists.
    dl {
        @include baseline(zeta, $bodytype, $lineheight: 2, $below: 2);

        dt,
        dd {
            font-feature-settings: "kern", "onum", "liga";
            margin-left: 2rem;

            @include breakpoint(tablet up) {
                margin-left: 0;
            }
        }
        dt {
            font-weight: map-get($bodytype, bold);
        }
        dd + dt {
            padding-top: 1rem;
        }
    }

    // Tables.
    table:not(.rouge-table) {
        font-feature-settings: "liga", "lnum", "tnum", "kern";
        font-style: normal;
        width: 100%;

        @include baseline(eta, $bodytype, $lineheight: 2, $below: 2);

        thead {
            th {
                padding-bottom: 1px;
                font-family: getFontFamily($bodytype);
                font-weight: map-get($bodytype, bold);

                @include baseline(eta, $bodytype, $lineheight: 2);
            }
        }

        tbody {
            td {
                font-family: getFontFamily($bodytype);
                @include baseline(eta, $bodytype, $lineheight: 2);
            }
        }
    }

    // Bold.
    b,
    strong,
    .bold {
        font-weight: map-get($bodytype, bold);
    }

    // Italic.
    em,
    i,
    .italic {
        font-style: map-get($bodytype, italic);
    }

    // Caption and inline small text.
    small {
        font-style: normal;
        @include fontsize(theta);
    }

    small {
        line-height: 1rem;
    }

    .caption {
        color: $caption-color;
        font-style: normal;

        @include baseline(eta, $bodytype, $lineheight: 1.5, $below: 1);

        &--nopad {
            @include baseline(eta, $bodytype, $lineheight: 2);
        }
    }

    // Nice spacing for captions.
    h1 + .caption,
    .alpha + .caption,
    h2 + .caption,
    .beta + .caption,
    h3 + .caption,
    .gamma + .caption {
        margin-top: -1.5rem;
    }

    .delta + .caption,
    .epsilon + .caption,
    .zeta + .caption {
        margin-top: 0rem;
    }

    // Quotes.
    blockquote {
        border-left: .15rem solid $border-color;

        p {
            font-style: map-get($bodytype, italic);
            padding-left: 1rem;

        }

        /**
         * We need to ensure, whole `p` gets contained in the blockquote (including
         * the bottom margin). This is beacuse otherwise, `border-left` would
         * be incomplete, not filling whole space of the blockquote.
         */
        &:after {
            content: ' ';
            clear: both;
            display: block;
            // A little nasty trick to ensure p is contained. We include a small,
            // invisible content that results in margin being contained within
            // the blockquote.
            border-bottom: 1px transparent solid;
            // Compensation for the 1px shift of the above border.
            margin-bottom: -1px;
        }

        @include breakpoint(mobile up) {
            margin-left: -1rem;
        }
    }

    blockquote + .figure {
        padding-top: 1rem;
    }

    // Horizontal rule.
    hr {
        width: 100%;
        background-image: linear-gradient(
            to bottom,
            rgba(0, 0, 0, 0) 50%,
            $hr-color 50%
        );
        background-position: 0 50%;
        background-repeat: repeat-x;
        background-size: 100% 0.15rem;
        border: 0;
        margin: 0;
        padding-bottom: 2rem;
        padding-top: 2rem;
    }

    // Code blocks

    // Inline code
    .highlighter-rouge {
        font-family: getFontFamily($monospacetype);
        background-color: $code-inline-background-color;
        word-break: break-word;
        padding: 0 0.2em;

        @each $breakpoint, $size in $inline-monospace-sizes {
            @include breakpoint($breakpoint up) {
                font-size: $size;
            }
        }
    }

    .highlight {
        background-color: $code-block-background-color;
        overflow-x: scroll;
        line-height: 1rem;
        font-family: getFontFamily($monospacetype);

        code {
            @include fontsize(theta);
            @include codeHighlight();
            display: inline-block;
            padding: 1rem;
        }

        // Line numbers
        .lineno {
            color: map-get($palette, gray-medium);
            margin-right: 1rem;
        }
    }

    // Code block
    figure.highlight {
        margin-bottom: 1rem;
    }

    // Letter space those capitals people, Jan Tschichold would be proud.
    .upper {
        font-kerning: normal;
        letter-spacing: 0.1rem;
        text-transform: uppercase;
    }

    // Real small caps.
    .small-caps {
        font-feature-settings: "smcp", "kern";
        font-kerning: normal;
        letter-spacing: 0.1rem;
    }

    // Consistent height numbers with OpenType.
    .lining-numerals {
        font-feature-settings: "lnum", "kern";
    }

    // Ascending and descending numbers with OpenType.
    .oldstyle-numerals {
        font-feature-settings: "onum", "kern";
    }
}

.article-typeset {
    text-align: left;

    a {
        // default anchor style
        @include anchor-style(true);
    }

    h1, h2, h3 {
        font-family: getFontFamily($headingtype);
    }

    h1 {
        @include baseline(
            gamma,
            $headingtype,
            $lineheight: 3,
            $breakpoint: tablet-small down,
            $anchor: true
        );

        @include baseline(
            gamma,
            $headingtype,
            $lineheight: 3,
            $below: 1,
            $breakpoint: tablet up,
            $anchor: true
        );
    }

    h2 {
        @include baseline(
            delta,
            $headingtype,
            $lineheight: 2,
            $below: 1,
            $above: 2,
            $breakpoint: tablet-small down,
            $anchor: true
        );
        @include baseline(
            delta,
            $headingtype,
            $lineheight: 3,
            $below: 1,
            $above: 1,
            $breakpoint: tablet up,
            $anchor: true
        );
    }

    h3 {
        @include baseline(
            epsilon,
            $headingtype,
            $lineheight: 3,
            $below: 1,
            $breakpoint: tablet-small down,
            $anchor: true
        );
        @include baseline(
            epsilon,
            $headingtype,
            $lineheight: 2,
            $below: 1,
            $above: 2,
            $breakpoint: tablet up,
            $anchor: true
        );
    }

    // basic image
    .figure:not(.highlight) {
        text-align: center;
        padding-bottom: 2rem;

        &.figure--wide {
            @include breakpoint(tablet up) {
                margin-left: -15rem;
                margin-right: -15rem;
            }
        }

        &.figure--left {
            text-align: left;
        }
    }

    .figure__image {
        // images without display: block get unspecified margin added by browsers
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .figure__caption {
        @include baseline(theta, $bodytype, $lineheight: 2);
    }

    .inline-figure-container {
        display: flex;
        justify-content: space-around;

        > figure {
            + figure {
                margin-left: 1rem;
            }

            img {
                max-height: 14rem;
            }
        }
    }
}

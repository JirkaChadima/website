$sitenav-menu-height: (
    mobile: 5rem,
    tablet: 9rem,
);
$sitenav-push: (
    mobile: calc(100vh - #{map-get($sitenav-menu-height, mobile)}),
    tablet: calc(100vh - #{map-get($sitenav-menu-height, tablet)}),
);

// push navigation outsite of the screen we need negative value of $sitenav-push
// but calc() cannot handle -1 * calc()
$sitenav-push-negative: (
    mobile: calc(-100vh + #{map-get($sitenav-menu-height, mobile)}),
    tablet: calc(-100vh + #{map-get($sitenav-menu-height, tablet)}),
);
$sitenav-slide-transition: cubic-bezier(1, 0, 0, 1);

.sitenav,
.sitenav__menu {
    // Height is needed so that .sitenav__linkset doesn't make the gap.
    height: map-get($sitenav-menu-height, mobile);

    @include deviceBreakpoint(tablet) {
        height: map-get($sitenav-menu-height, tablet);
    }
}


/* Menu container that is visible all the time */
.sitenav__menu {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    font-family: getFontFamily($headingtype);
    font-weight: map-get($headingtype, semi);
    // necessary for z-index
    position: relative;
    // Menu is above the linkset and the linkset slides from the bottom of it
    z-index: 2;
    background: map-get($palette, white);

    @include deviceBreakpoint(tablet-small) {
        margin-left: -1rem;
        margin-right: -1rem;
    }
}

// logo image
.sitenav__brand {
    @mixin snBrandSize($height) {
        $brand-dimension-ratio: 153 / 196;

        height: $height;
        // use image dimension ratio to calculate right shift
        margin-left: $height * -0.5 * $brand-dimension-ratio;
    }

    position: absolute;
    top: 1rem;
    left: 50%;

    @include snBrandSize(4rem);


    // logo image scales up on bigger screens
    @include deviceBreakpoint(tablet) {
        background: map-get($palette, white);
        padding: .5em;

        @include snBrandSize(8rem);
    }
}

.sitenav__company {
    padding: 1rem;
    transition: #{$anchor-hover-transition};
    text-transform: uppercase;

    @include sassline(epsilon, $headingtype, 3.5, 1, all);


    &:hover {
        color: map-get($palette, red);
    }
}

/* List of menu links */
.sitenav__linkset {
    display: flex;
    width: 100%;
    height: map-get($sitenav-push, mobile);
    min-height: 8rem;
    padding-top: map-get($sitenav-menu-height, mobile)/2;
    list-style-type: none;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    // Menu is above the linkset and the linkset slides from the bottom of it
    z-index: 1;

    @include deviceBreakpoint(tablet) {
        height: map-get($sitenav-push, tablet);
        padding-top: map-get($sitenav-menu-height, tablet)/2;
        justify-content: flex-start;
    }
}

/* Single item within the links */
.sitenav__linkset-item {
    font-family: getFontFamily($headingtype);
    font-weight: map-get($headingtype, semi);
    letter-spacing: .1rem;
    padding: 1rem 0;

    // active link is highlighted
    &--active .sitenav__link,
    &:hover .sitenav__link,
    &:active .sitenav__link {
        color: map-get($palette, red);
    }

    .sitenav__link {
        @include sassline(beta, $headingtype, 3.5, 1, all);

        @include deviceBreakpoint(tablet) {
            @include sassline(beta, $headingtype, 5, 1, all);
        }
    }
}


/* Set up animated props */
.sitenav__linkset {
    transform: translate3d(0, map-get($sitenav-push-negative, mobile), 0);
    opacity: 0;
    pointer-events: none;
    transition: transform .3s $sitenav-slide-transition, opacity .15s $sitenav-slide-transition;
    // transition-property: opacity, transform;
    will-change: opacity, transform,;

    @include deviceBreakpoint(tablet) {
        transform: translate3d(0, map-get($sitenav-push-negative, tablet), 0);
    }

    @include deviceBreakpoint(desktop) {
        transform: translate3d(0, map-get($sitenav-push-negative, desktop), 0);
    }
}

.sitenav-wrapper__push {
    transform: translate3d(0, 0, 0);
    transition: transform .3s $sitenav-slide-transition;
    will-change: transform;
}

/* Styles when menu is enabled */
.sitenav-wrapper--show {
    // Unshift linkset
    .sitenav__linkset {
        transform: translate3d(0, 0, 0);
        opacity: 1;
        pointer-events: all;
    }

    // Push the content by same space as the linkset
    .sitenav-wrapper__push {
        transform: translate3d(0, map-get($sitenav-push, mobile), 0);

        @include deviceBreakpoint(tablet) {
            transform: translate3d(0, map-get($sitenav-push, tablet), 0);
        }
    }
}

.sitenav-wrapper--noanim .sitenav-wrapper__push,
.sitenav-wrapper--noanim .sitenav__linkset {
    transition: none;
}

